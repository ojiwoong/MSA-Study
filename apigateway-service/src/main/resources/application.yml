server:
  port: 8000

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: first-service
          predicates:
            - Path=/first-service/**
          uri: lb://FIRST-SERVICE/
          filters:
            - AddRequestHeader=first-request, ji-woong
            - AddResponseHeader=first-response, Hi
        - id: second-service
          predicates:
            - Path=/second-service/**
          uri: lb://SECOND-SERVICE
          filters:
            - AddRequestHeader=second-request, ji-woong22
            - AddResponseHeader=first-response, Hello
        - id: user-service
          predicates:
            - Path=/user-service/login
            - Method=POST
          uri: lb://USER-SERVICE
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          predicates:
            - Path=/user-service/users
            - Method=POST
          uri: lb://USER-SERVICE
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET, POST
          uri: lb://USER-SERVICE
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          predicates:
            - Path=/user-service/**
            - Method=GET
          uri: lb://USER-SERVICE
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: catalog-service
          predicates:
            - Path=/catalog-service/**
          uri: lb://CATALOG-SERVICE
          filters:
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          predicates:
            - Path=/order-service/**
          uri: lb://ORDER-SERVICE
          filters:
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,httptrace
  trace:
    http:
      include: RESPONSE_HEADERS

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true



